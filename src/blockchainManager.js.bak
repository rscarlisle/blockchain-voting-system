const blockchain = require("blockchain");

// console.log("hello")

let testBlock = new blockchain.Block(1, Date.now(), {voter: "Masha", votedFor: "Justin"})
console.log(testBlock)

// once things are hooked up (google the error message: Uncaught ReferenceError: require is not defined)
// (12:14pm) need to add jquery library above materializecss - done @ 12:23pm;

// create a new Block in the blockchain
// 12:24pm - in progress! Checked Chrome DevTools and had messages referring to "require" not being defined, etc. 
// Researched Stackoverflow, etc and could not solve. Minutes ago I remembered a lesson in PL about modules by 
// Brice Wilson. Found the perfect example! Time: (1:51pm)
// I used npm to load systemjs
// I examined my target files to see if they had any dependencies? Yes for: blockchain.js & for blockchainManager.js
// Now, you can use the CommonJS syntax, using: "require" and you can add their dependency file(s);
// Add the appropriate "export" statements at the bottom of those 2 modules;
// Now, we need to fix the script references in the index.html file:
// You may need to delete unnecessary script tags?
// Add <script src="node_modules/systemjs/dist/system.js"></script>
// Got some help from Masha; looks like we need a build process: enter -> webpack
// (3:43pm) Still troubleshooting the problem.


// write some JS, like a render function that gets all the blocks from the block chain
// for each of the blocks
//   grab the template card from the dom (might give it an id like #templateCard)
//   clone the template card var dupNode = node.cloneNode([deep]);  make sure to pass deep = true
//   https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode
//   select pieces of the template card dom and adjust their innerText based on info from the current block
//   append the newly created card to the list of cards (.card-container)
